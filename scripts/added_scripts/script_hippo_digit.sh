### IL FAUT PARLER DE CE SCRIPT 
#c'est interessant pour la reproductibilité car on voit les seuls paramètres qu'on change.
#chaque ligne permet d'entrainer un reseau de neurones avec un jeu de donnees different
#donc 5 lignes permettent d'entrainer le même réseau (même classifieur, même simplificateur) sur 5 jeux de données différents
#pourquoi les beta_simp sont differents?? --> pour gridsearch ? 
#pareil pourquoi ratio_simps sont differents?? --> pour gridsearch ?(quel est le meilleur moyen d'effacer progressiveemnt le simplificateur )

#A VERFIFIER QU'EN OUTPUT DES COMMANDES ON A BIEN TOUTES LES DONNÉES POUR RECONSTRUIRE LE TABLEAU DU PAPIER'
#... cad qu'on a bien la valeur de performance pour 'CT', 'EEF', 'CT', 'NFT' (+IC à 95%)
python train-neural.py --epochs=5 --activation=relu --arch=ff --beta_simp=2000 --dataset=mnist_back_image --iterations_simp=1 --lr_clf=0.0001 --lr_simp=0.0001 --n_deep=4 --n_filters_base=64 --ratio_simp=0.25 --scaling=quadratic --sigmoid_postprocessing=no --simplifier=unet --target_conditioning=yes --weight_decay_clf=0.0001 --weight_decay_simp=0.0001

# python train-neural.py --activation=relu --arch=ff --beta_simp=2000 --dataset=mnist_rot_back_image --iterations_simp=1 --lr_clf=0.0001 --lr_simp=1e-05 --n_deep=4 --n_filters_base=64 --ratio_simp=0.25 --scaling=quadratic --sigmoid_postprocessing=no --simplifier=unet --target_conditioning=yes --weight_decay_clf=0.0001 --weight_decay_simp=0.0001
# python train-neural.py --activation=relu --arch=ff --beta_simp=2000 --dataset=mnist_rot --iterations_simp=1 --lr_clf=0.0001 --lr_simp=1e-05 --n_deep=4 --n_filters_base=64 --ratio_simp=0.25 --scaling=quadratic --sigmoid_postprocessing=no --simplifier=unet --target_conditioning=no --weight_decay_clf=0.0001 --weight_decay_simp=0.0001
# python train-neural.py --activation=relu --arch=ff --beta_simp=500 --dataset=rectangles_image --iterations_simp=1 --lr_clf=0.0001 --lr_simp=1e-05 --n_deep=4 --n_filters_base=128 --ratio_simp=0.85 --scaling=quadratic --sigmoid_postprocessing=no --simplifier=unet --target_conditioning=no --weight_decay_clf=0.0001 --weight_decay_simp=0.0001
# python train-neural.py --activation=relu --arch=ff --beta_simp=2000 --dataset=convex --iterations_simp=1 --lr_clf=0.0001 --lr_simp=0.0005 --n_deep=4 --n_filters_base=128 --ratio_simp=0.85 --scaling=quadratic --sigmoid_postprocessing=no --simplifier=unet --target_conditioning=no --weight_decay_clf=0.0001 --weight_decay_simp=0.0001
# python train-neural.py --activation=relu --arch=ff2 --beta_simp=1000 --dataset=mnist_back_image --iterations_simp=1 --lr_clf=0.0001 --lr_simp=0.0001 --n_deep=4 --n_filters_base=96 --ratio_simp=0.5 --scaling=quadratic --sigmoid_postprocessing=no --simplifier=unet --target_conditioning=no --weight_decay_clf=0.0001 --weight_decay_simp=0.0001
# python train-neural.py --activation=relu --arch=ff2 --beta_simp=1000 --dataset=mnist_rot_back_image --iterations_simp=1 --lr_clf=0.0001 --lr_simp=1e-05 --n_deep=4 --n_filters_base=128 --ratio_simp=0.5 --scaling=quadratic --sigmoid_postprocessing=no --simplifier=unet --target_conditioning=no --weight_decay_clf=0.0001 --weight_decay_simp=0.0001
# python train-neural.py --activation=relu --arch=ff2 --beta_simp=500 --dataset=mnist_rot --iterations_simp=1 --lr_clf=0.0001 --lr_simp=0.0005 --n_deep=4 --n_filters_base=128 --ratio_simp=0.5 --scaling=quadratic --sigmoid_postprocessing=no --simplifier=unet --target_conditioning=no --weight_decay_clf=0.0001 --weight_decay_simp=0.0001
# python train-neural.py --activation=relu --arch=ff2 --beta_simp=1000 --dataset=rectangles_image --iterations_simp=1 --lr_clf=0.0001 --lr_simp=0.0001 --n_deep=4 --n_filters_base=64 --ratio_simp=0.5 --scaling=quadratic --sigmoid_postprocessing=no --simplifier=unet --target_conditioning=no --weight_decay_clf=0.0001 --weight_decay_simp=0.0001
# python train-neural.py --activation=relu --arch=ff2 --beta_simp=500 --dataset=convex --iterations_simp=1 --lr_clf=0.0001 --lr_simp=1e-05 --n_deep=4 --n_filters_base=128 --ratio_simp=0.25 --scaling=quadratic --sigmoid_postprocessing=no --simplifier=unet --target_conditioning=no --weight_decay_clf=0.0001 --weight_decay_simp=0.0001
# python train-neural.py --activation=relu --arch=cnn --beta_simp=500 --dataset=mnist_back_image --iterations_simp=1 --lr_clf=0.0001 --lr_simp=1e-05 --n_deep=4 --n_filters_base=96 --ratio_simp=0.85 --scaling=quadratic --sigmoid_postprocessing=no --simplifier=unet --target_conditioning=no --weight_decay_clf=0.0001 --weight_decay_simp=0.0001
# python train-neural.py --activation=relu --arch=cnn --beta_simp=2000 --dataset=mnist_rot_back_image --iterations_simp=1 --lr_clf=0.0001 --lr_simp=1e-05 --n_deep=4 --n_filters_base=96 --ratio_simp=0.25 --scaling=quadratic --sigmoid_postprocessing=no --simplifier=unet --target_conditioning=no --weight_decay_clf=0.0001 --weight_decay_simp=0.0001
# python train-neural.py --activation=relu --arch=cnn --beta_simp=1000 --dataset=mnist_rot --iterations_simp=1 --lr_clf=0.0001 --lr_simp=0.0005 --n_deep=4 --n_filters_base=96 --ratio_simp=0.25 --scaling=quadratic --sigmoid_postprocessing=no --simplifier=unet --target_conditioning=no --weight_decay_clf=0.0001 --weight_decay_simp=0.0001
# python train-neural.py --activation=relu --arch=cnn --beta_simp=500 --dataset=rectangles_image --iterations_simp=1 --lr_clf=0.0001 --lr_simp=0.0001 --n_deep=4 --n_filters_base=96 --ratio_simp=0.5 --scaling=quadratic --sigmoid_postprocessing=no --simplifier=unet --target_conditioning=yes --weight_decay_clf=0.0001 --weight_decay_simp=0.0001
# python train-neural.py --activation=relu --arch=cnn --beta_simp=2000 --dataset=convex --iterations_simp=1 --lr_clf=0.0001 --lr_simp=1e-05 --n_deep=4 --n_filters_base=128 --ratio_simp=0.25 --scaling=quadratic --sigmoid_postprocessing=no --simplifier=unet --target_conditioning=yes --weight_decay_clf=0.0001 --weight_decay_simp=0.0001
# python train-neural.py --activation=relu --arch=cnn2 --beta_simp=500 --dataset=mnist_back_image --iterations_simp=1 --lr_clf=0.0001 --lr_simp=1e-05 --n_deep=4 --n_filters_base=64 --ratio_simp=0.25 --scaling=quadratic --sigmoid_postprocessing=no --simplifier=unet --target_conditioning=yes --weight_decay_clf=0.0001 --weight_decay_simp=0.0001
# python train-neural.py --activation=relu --arch=cnn2 --beta_simp=2000 --dataset=mnist_rot_back_image --iterations_simp=1 --lr_clf=0.0001 --lr_simp=0.0005 --n_deep=4 --n_filters_base=64 --ratio_simp=0.25 --scaling=quadratic --sigmoid_postprocessing=no --simplifier=unet --target_conditioning=yes --weight_decay_clf=0.0001 --weight_decay_simp=0.0001
# python train-neural.py --activation=relu --arch=cnn2 --beta_simp=2000 --dataset=mnist_rot --iterations_simp=1 --lr_clf=0.0001 --lr_simp=0.0001 --n_deep=4 --n_filters_base=128 --ratio_simp=0.25 --scaling=quadratic --sigmoid_postprocessing=no --simplifier=unet --target_conditioning=no --weight_decay_clf=0.0001 --weight_decay_simp=0.0001
# python train-neural.py --activation=relu --arch=cnn2 --beta_simp=1000 --dataset=rectangles_image --iterations_simp=1 --lr_clf=0.0001 --lr_simp=0.0001 --n_deep=4 --n_filters_base=64 --ratio_simp=0.25 --scaling=quadratic --sigmoid_postprocessing=no --simplifier=unet --target_conditioning=no --weight_decay_clf=0.0001 --weight_decay_simp=0.0001
# python train-neural.py --activation=relu --arch=cnn2 --beta_simp=1000 --dataset=convex --iterations_simp=1 --lr_clf=0.0001 --lr_simp=0.0005 --n_deep=4 --n_filters_base=128 --ratio_simp=0.25 --scaling=quadratic --sigmoid_postprocessing=no --simplifier=unet --target_conditioning=no --weight_decay_clf=0.0001 --weight_decay_simp=0.0001